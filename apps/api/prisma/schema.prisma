enum ComponentStatus {
  Created
  AutoQuoted
  ManuallyQuoted
}

model Component {
  id        String          @id @default(cuid())
  status    ComponentStatus @default(Created)
  assetUrl  String
  quantity  Int             @default(1)
  unitPrice Float?
  readOnly  Boolean         @default(false)

  material         Material       @relation(fields: [materialId], references: [id])
  materialId       String
  order            Order?         @relation(fields: [orderId], references: [id])
  orderId          String?
  project          Project?       @relation(fields: [projectId], references: [id], onDelete: Cascade)
  projectId        String?
  servicePackage   ServicePackage @relation(fields: [servicePackageId], references: [id])
  servicePackageId String

  createdAt DateTime @default(now())
}

model Material {
  id       String  @id @default(cuid())
  name     String  @unique
  price    Float
  archived Boolean @default(false)
  default  Boolean @default(false)

  components Component[]
}

model Message {
  id      String @id @default(cuid())
  content String

  supportTicket   SupportTicket @relation(fields: [supportTicketId], references: [id])
  supportTicketId String
  sender          User          @relation(fields: [senderId], references: [id])
  senderId        String

  createdAt DateTime @default(now())
}

enum OrderStatus {
  PaymentDue
  Processing
  Cancelled
  Problem
  InTransit
  PickupAvailable
  Delivered
  Returned
}

model Order {
  id     String      @id @default(cuid())
  status OrderStatus @default(PaymentDue)

  client         User            @relation(fields: [clientId], references: [id])
  clientId       String
  components     Component[]
  supportTickets SupportTicket[]

  createdAt DateTime @default(now())
}

model Project {
  id String @id @default(cuid())

  client     User        @relation(fields: [clientId], references: [id])
  clientId   String
  components Component[]

  createdAt DateTime @default(now())
}

model ServicePackage {
  id       String  @id @default(cuid())
  name     String
  price    Float
  archived Boolean @default(false)
  default  Boolean @default(false)

  components Component[]
}

enum SupportTicketStatus {
  Open
  Closed
}

model SupportTicket {
  id     String              @id @default(cuid())
  status SupportTicketStatus @default(Open)

  order    Order     @relation(fields: [orderId], references: [id])
  orderId  String
  messages Message[]

  createdAt DateTime @default(now())
}

model User {
  id           String  @id @default(cuid())
  email        String  @unique
  passwordHash String
  isAdmin      Boolean @default(false)

  projects Project[]
  orders   Order[]
  messages Message[]
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
